// Code generated by protoc-gen-go. DO NOT EDIT.
// source: health_check.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReadinessReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadinessReq) Reset()         { *m = ReadinessReq{} }
func (m *ReadinessReq) String() string { return proto.CompactTextString(m) }
func (*ReadinessReq) ProtoMessage()    {}
func (*ReadinessReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_947d6a94f116b4f4, []int{0}
}

func (m *ReadinessReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadinessReq.Unmarshal(m, b)
}
func (m *ReadinessReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadinessReq.Marshal(b, m, deterministic)
}
func (m *ReadinessReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadinessReq.Merge(m, src)
}
func (m *ReadinessReq) XXX_Size() int {
	return xxx_messageInfo_ReadinessReq.Size(m)
}
func (m *ReadinessReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadinessReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadinessReq proto.InternalMessageInfo

type ReadinessResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadinessResp) Reset()         { *m = ReadinessResp{} }
func (m *ReadinessResp) String() string { return proto.CompactTextString(m) }
func (*ReadinessResp) ProtoMessage()    {}
func (*ReadinessResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_947d6a94f116b4f4, []int{1}
}

func (m *ReadinessResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadinessResp.Unmarshal(m, b)
}
func (m *ReadinessResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadinessResp.Marshal(b, m, deterministic)
}
func (m *ReadinessResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadinessResp.Merge(m, src)
}
func (m *ReadinessResp) XXX_Size() int {
	return xxx_messageInfo_ReadinessResp.Size(m)
}
func (m *ReadinessResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadinessResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReadinessResp proto.InternalMessageInfo

func (m *ReadinessResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadinessResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LivenessReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LivenessReq) Reset()         { *m = LivenessReq{} }
func (m *LivenessReq) String() string { return proto.CompactTextString(m) }
func (*LivenessReq) ProtoMessage()    {}
func (*LivenessReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_947d6a94f116b4f4, []int{2}
}

func (m *LivenessReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LivenessReq.Unmarshal(m, b)
}
func (m *LivenessReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LivenessReq.Marshal(b, m, deterministic)
}
func (m *LivenessReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivenessReq.Merge(m, src)
}
func (m *LivenessReq) XXX_Size() int {
	return xxx_messageInfo_LivenessReq.Size(m)
}
func (m *LivenessReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LivenessReq.DiscardUnknown(m)
}

var xxx_messageInfo_LivenessReq proto.InternalMessageInfo

type LivenessResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LivenessResp) Reset()         { *m = LivenessResp{} }
func (m *LivenessResp) String() string { return proto.CompactTextString(m) }
func (*LivenessResp) ProtoMessage()    {}
func (*LivenessResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_947d6a94f116b4f4, []int{3}
}

func (m *LivenessResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LivenessResp.Unmarshal(m, b)
}
func (m *LivenessResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LivenessResp.Marshal(b, m, deterministic)
}
func (m *LivenessResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivenessResp.Merge(m, src)
}
func (m *LivenessResp) XXX_Size() int {
	return xxx_messageInfo_LivenessResp.Size(m)
}
func (m *LivenessResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LivenessResp.DiscardUnknown(m)
}

var xxx_messageInfo_LivenessResp proto.InternalMessageInfo

func (m *LivenessResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LivenessResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ReadinessReq)(nil), "proto.ReadinessReq")
	proto.RegisterType((*ReadinessResp)(nil), "proto.ReadinessResp")
	proto.RegisterType((*LivenessReq)(nil), "proto.LivenessReq")
	proto.RegisterType((*LivenessResp)(nil), "proto.LivenessResp")
}

func init() { proto.RegisterFile("health_check.proto", fileDescriptor_947d6a94f116b4f4) }

var fileDescriptor_947d6a94f116b4f4 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x48, 0x4d, 0xcc,
	0x29, 0xc9, 0x88, 0x4f, 0xce, 0x48, 0x4d, 0xce, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x05, 0x53, 0x52, 0x32, 0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x89, 0x05, 0x99, 0xfa, 0x89,
	0x79, 0x79, 0xf9, 0x25, 0x89, 0x25, 0x99, 0xf9, 0x79, 0xc5, 0x10, 0x45, 0x4a, 0x7c, 0x5c, 0x3c,
	0x41, 0xa9, 0x89, 0x29, 0x99, 0x79, 0xa9, 0xc5, 0xc5, 0x41, 0xa9, 0x85, 0x4a, 0xb6, 0x5c, 0xbc,
	0x48, 0xfc, 0xe2, 0x02, 0x21, 0x21, 0x2e, 0x96, 0xe4, 0xfc, 0x94, 0x54, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xd6, 0x20, 0x30, 0x5b, 0x48, 0x82, 0x8b, 0x3d, 0x37, 0xb5, 0xb8, 0x38, 0x31, 0x3d, 0x55,
	0x82, 0x49, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc6, 0x55, 0xe2, 0xe5, 0xe2, 0xf6, 0xc9, 0x2c, 0x4b,
	0x85, 0x99, 0x66, 0xc3, 0xc5, 0x83, 0xe0, 0x92, 0x6a, 0x98, 0xd1, 0x42, 0x46, 0x2e, 0x6e, 0x0f,
	0xb0, 0xbf, 0x9c, 0x41, 0xde, 0x12, 0xf2, 0xe2, 0xe2, 0x84, 0xbb, 0x4d, 0x48, 0x18, 0xe2, 0x01,
	0x3d, 0x64, 0xd7, 0x4b, 0x89, 0x60, 0x0a, 0x16, 0x17, 0x28, 0x09, 0x35, 0x5d, 0x7e, 0x32, 0x99,
	0x89, 0x47, 0x88, 0x4b, 0xbf, 0x08, 0xae, 0xdd, 0x8d, 0x8b, 0x03, 0xe6, 0x32, 0x21, 0x21, 0xa8,
	0x2e, 0x24, 0x97, 0x4b, 0x09, 0x63, 0x88, 0x15, 0x17, 0x28, 0x09, 0x82, 0x0d, 0xe2, 0x16, 0xe2,
	0xd4, 0xcf, 0x81, 0x0a, 0x27, 0xb1, 0x81, 0x95, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xcc,
	0xc2, 0x30, 0x2e, 0x81, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HealthCheckClient is the client API for HealthCheck service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthCheckClient interface {
	Readiness(ctx context.Context, in *ReadinessReq, opts ...grpc.CallOption) (*ReadinessResp, error)
	Liveness(ctx context.Context, in *LivenessReq, opts ...grpc.CallOption) (*LivenessResp, error)
}

type healthCheckClient struct {
	cc *grpc.ClientConn
}

func NewHealthCheckClient(cc *grpc.ClientConn) HealthCheckClient {
	return &healthCheckClient{cc}
}

func (c *healthCheckClient) Readiness(ctx context.Context, in *ReadinessReq, opts ...grpc.CallOption) (*ReadinessResp, error) {
	out := new(ReadinessResp)
	err := c.cc.Invoke(ctx, "/proto.HealthCheck/Readiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthCheckClient) Liveness(ctx context.Context, in *LivenessReq, opts ...grpc.CallOption) (*LivenessResp, error) {
	out := new(LivenessResp)
	err := c.cc.Invoke(ctx, "/proto.HealthCheck/Liveness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthCheckServer is the server API for HealthCheck service.
type HealthCheckServer interface {
	Readiness(context.Context, *ReadinessReq) (*ReadinessResp, error)
	Liveness(context.Context, *LivenessReq) (*LivenessResp, error)
}

// UnimplementedHealthCheckServer can be embedded to have forward compatible implementations.
type UnimplementedHealthCheckServer struct {
}

func (*UnimplementedHealthCheckServer) Readiness(ctx context.Context, req *ReadinessReq) (*ReadinessResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Readiness not implemented")
}
func (*UnimplementedHealthCheckServer) Liveness(ctx context.Context, req *LivenessReq) (*LivenessResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Liveness not implemented")
}

func RegisterHealthCheckServer(s *grpc.Server, srv HealthCheckServer) {
	s.RegisterService(&_HealthCheck_serviceDesc, srv)
}

func _HealthCheck_Readiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadinessReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthCheckServer).Readiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HealthCheck/Readiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthCheckServer).Readiness(ctx, req.(*ReadinessReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HealthCheck_Liveness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LivenessReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthCheckServer).Liveness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.HealthCheck/Liveness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthCheckServer).Liveness(ctx, req.(*LivenessReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _HealthCheck_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HealthCheck",
	HandlerType: (*HealthCheckServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Readiness",
			Handler:    _HealthCheck_Readiness_Handler,
		},
		{
			MethodName: "Liveness",
			Handler:    _HealthCheck_Liveness_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "health_check.proto",
}
