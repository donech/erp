admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 10000
static_resources:
  listeners:
    - name: main-listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 51051 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: grpc_json
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      json_format: {
                        "start_time": "%START_TIME%",
                        "method": "%REQ(:METHOD)%",
                        "path": "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%",
                        "protocal": "%PROTOCOL%",
                        "response_code": "%RESPONSE_CODE%",
                        "response_flags": "%RESPONSE_FLAGS%",
                        "bytes_received": "%BYTES_RECEIVED%",
                        "bytes_sent": "%BYTES_SENT%",
                        "duration": "%DURATION%",
                        "service_time": "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%",
                        "x-forwarded-for": "%REQ(X-FORWARDED-FOR)%",
                        "user-agent": "%REQ(USER-AGENT)%",
                        "x-request-id": "%REQ(X-REQUEST-ID)%",
                        "authority": "%REQ(:AUTHORITY)%",
                        "upstream_host": "%UPSTREAM_HOST%",
                        "x-device-id": "%REQ(X-DEVICE-ID)%",
                        "x-user-number": "%REQ(X-USER-NUMBER)%",
                        "cookie": "%REQ(COOKIE)%",
                        "token": "%REQ(TOKEN)%",
                        "auth-token": "%REQ(AUTH-TOKEN)%",
                      }
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/", grpc: {} }
                          route: { cluster: grpc-backend-services, timeout: { seconds: 60 } }
                http_filters:
                  - name: envoy.filters.http.grpc_json_transcoder
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                      proto_descriptor: "/data/service_definition.pb"
                      services: ["proto.Admin","proto.HealthCheck","proto.Common", "proto.System"]
                      print_options:
                        add_whitespace: true
                        always_print_primitive_fields: true
                        always_print_enums_as_ints: false
                        preserve_proto_field_names: false
                  - name: envoy.filters.http.router

  clusters:
    - name: grpc-backend-services
      connect_timeout: 1.25s
      type: logical_dns
      lb_policy: round_robin
      dns_lookup_family: V4_ONLY
      http2_protocol_options: {}
      hosts:
        - socket_address:
            address: host.docker.internal
            port_value: 20000